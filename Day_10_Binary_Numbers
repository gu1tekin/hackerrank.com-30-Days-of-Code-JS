'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'factorial' function below.
 *
 * The function is expected to return an INTEGER.
 * The function accepts INTEGER n as parameter.
 */

function factorial(n) {
    // Convert the decimal number to binary
    const binaryRepresentation = n.toString(2);

    // Split the binary representation by '0' to get an array of consecutive 1's
    const consecutiveOnesArray = binaryRepresentation.split('0');

    // Find the length of the maximum consecutive 1's sequence
    const maxLength = Math.max(...consecutiveOnesArray.map(sequence => sequence.length));|

    return maxLength;
}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const n = parseInt(readLine().trim(), 10);

    const result = factorial(n);

    ws.write(result + '\n');

    ws.end();
}
